# Generated by Django 3.2.9 on 2022-12-17 16:06

import os
import json
from django.db import migrations


def load_json(filename: str, basepath: str = 'tagger/fixtures/'):
    filepath = os.path.join(basepath, filename)
    with open(filepath, 'r') as f:
        data = json.load(f)
    return data


def create_objects(filename: str, model, basepath: str = 'tagger/fixtures/'):
    objects = load_json(filename, basepath)
    first_object = objects[0]

    if isinstance(first_object, dict):
        objects = [model(**obj) for obj in objects]
    elif isinstance(first_object, str):
        objects = [model(description = desc) for desc in objects]
    else:
        raise TypeError('Invalid loaded json data. Please ensure that the loaded json data is either a list of strings or a list of dicts.')

    model.objects.bulk_create(objects)


def populate_initial_data(apps, schema_editor):
    Status = apps.get_model('tagger', 'Status')
    Category = apps.get_model('tagger', 'Category')
    DeathCause = apps.get_model('tagger', 'DeathCause')
    Code = apps.get_model('tagger', 'Code')
    Period = apps.get_model('tagger', 'Period')
    Mapping = apps.get_model('tagger', 'Mapping')

    create_objects('statuses.json', Status)
    create_objects('deathcauses.json', DeathCause)
    create_objects('categories.json', Category)
    create_objects('codes.json', Code)
    create_objects('periods.json', Period)
    create_objects('mappings.json', Mapping)


class Migration(migrations.Migration):

    dependencies = [
        ('tagger', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(populate_initial_data, reverse_code = migrations.RunPython.noop),
    ]
